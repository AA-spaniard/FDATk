{
  "{\"sourceRoot\":\"C:\\\\workspace\\\\food-api\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"C:\\\\workspace\\\\food-api\",\"filename\":\"C:\\\\workspace\\\\food-api\\\\test.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\workspace\\\\food-api\",\"plugins\":[],\"presets\":[]}:7.5.5": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\workspace\\food-api",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "C:\\workspace\\food-api",
      "filename": "C:\\workspace\\food-api\\test.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\workspace\\food-api",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\workspace\\food-api\\test.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "C:\\workspace\\food-api\\test.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\workspace\\food-api",
        "sourceFileName": "test.js"
      }
    },
    "ast": null,
    "code": "const db = require('./database/db.js');\n\ndb.connect();\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInRlc3QuanMiXSwibmFtZXMiOlsiZGIiLCJyZXF1aXJlIiwiY29ubmVjdCJdLCJtYXBwaW5ncyI6IkFBQUEsTUFBTUEsRUFBRSxHQUFHQyxPQUFPLENBQUMsa0JBQUQsQ0FBbEI7O0FBRUFELEVBQUUsQ0FBQ0UsT0FBSCIsInNvdXJjZVJvb3QiOiJDOlxcd29ya3NwYWNlXFxmb29kLWFwaSIsInNvdXJjZXNDb250ZW50IjpbImNvbnN0IGRiID0gcmVxdWlyZSgnLi9kYXRhYmFzZS9kYi5qcycpO1xyXG5cclxuZGIuY29ubmVjdCgpOyJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "test.js"
      ],
      "names": [
        "db",
        "require",
        "connect"
      ],
      "mappings": "AAAA,MAAMA,EAAE,GAAGC,OAAO,CAAC,kBAAD,CAAlB;;AAEAD,EAAE,CAACE,OAAH",
      "sourceRoot": "C:\\workspace\\food-api",
      "sourcesContent": [
        "const db = require('./database/db.js');\r\n\r\ndb.connect();"
      ]
    },
    "sourceType": "module",
    "mtime": 1564583834919
  },
  "{\"sourceRoot\":\"C:\\\\workspace\\\\food-api\\\\database\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"C:\\\\workspace\\\\food-api\",\"filename\":\"C:\\\\workspace\\\\food-api\\\\database\\\\db.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\workspace\\\\food-api\",\"plugins\":[],\"presets\":[]}:7.5.5": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\workspace\\food-api\\database",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "C:\\workspace\\food-api",
      "filename": "C:\\workspace\\food-api\\database\\db.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\workspace\\food-api",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\workspace\\food-api\\database\\db.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "C:\\workspace\\food-api\\database\\db.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\workspace\\food-api\\database",
        "sourceFileName": "db.js"
      }
    },
    "ast": null,
    "code": "const mongoose = require(\"mongoose\");\n\nimport { FoodSchemaJoi, UserSchemaJoi } from './shemas.js';\nimport { UserModel, FoodModel } from './shemas.js';\nimport { log } from '../alias.js';\n\nconst joi = require('joi');\n\nconst server_path = \"mongodb+srv://thesatanist:fv017kpp@cluster0-qbsmj.mongodb.net/test\";\nvar connection;\n\nvar start = function () {\n  connection = mongoose.connect(server_path, {\n    useNewUrlParser: true\n  });\n  return connection;\n}; //get User from database with user_id\n\n\nvar getUser = function (user_id) {};\n\nvar insertUser = function (user) {\n  UserSchemaJoi.validate(user, (err, value) => {\n    if (err) {\n      log(\"Wrong User schema provided: \", err);\n    } else {\n      User.insert(user, (err, small) => {\n        if (err) {\n          log(\"Unexpected mongo error\");\n        } else {\n          log(\"New User appended\");\n        }\n      });\n    }\n  });\n}; //get History from database with user_id\n\n\nvar getHistory = function (user_id) {}; //get Food id from food_name\n\n\nvar getFoodId = function (food_name) {}; //get Food name from food_id\n\n\nvar getFoodName = function (food_id) {};\n\nmodule.exports.connect = connect;\nmodule.exports.getUser = getUser;\nmodule.exports.getHistory = getHistory;\nmodule.exports.getFood = getFood;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImRiLmpzIl0sIm5hbWVzIjpbIm1vbmdvb3NlIiwicmVxdWlyZSIsIkZvb2RTY2hlbWFKb2kiLCJVc2VyU2NoZW1hSm9pIiwiVXNlck1vZGVsIiwiRm9vZE1vZGVsIiwibG9nIiwiam9pIiwic2VydmVyX3BhdGgiLCJjb25uZWN0aW9uIiwic3RhcnQiLCJjb25uZWN0IiwidXNlTmV3VXJsUGFyc2VyIiwiZ2V0VXNlciIsInVzZXJfaWQiLCJpbnNlcnRVc2VyIiwidXNlciIsInZhbGlkYXRlIiwiZXJyIiwidmFsdWUiLCJVc2VyIiwiaW5zZXJ0Iiwic21hbGwiLCJnZXRIaXN0b3J5IiwiZ2V0Rm9vZElkIiwiZm9vZF9uYW1lIiwiZ2V0Rm9vZE5hbWUiLCJmb29kX2lkIiwibW9kdWxlIiwiZXhwb3J0cyIsImdldEZvb2QiXSwibWFwcGluZ3MiOiJBQUFBLE1BQU1BLFFBQVEsR0FBR0MsT0FBTyxDQUFDLFVBQUQsQ0FBeEI7O0FBQ0EsU0FBU0MsYUFBVCxFQUF3QkMsYUFBeEIsUUFBNkMsYUFBN0M7QUFDQSxTQUFTQyxTQUFULEVBQW9CQyxTQUFwQixRQUFxQyxhQUFyQztBQUNBLFNBQVNDLEdBQVQsUUFBb0IsYUFBcEI7O0FBQ0EsTUFBTUMsR0FBRyxHQUFHTixPQUFPLENBQUMsS0FBRCxDQUFuQjs7QUFFQSxNQUFNTyxXQUFXLEdBQUcsb0VBQXBCO0FBRUEsSUFBSUMsVUFBSjs7QUFFQSxJQUFJQyxLQUFLLEdBQUcsWUFBWTtBQUNwQkQsRUFBQUEsVUFBVSxHQUFHVCxRQUFRLENBQUNXLE9BQVQsQ0FBaUJILFdBQWpCLEVBQThCO0FBQUNJLElBQUFBLGVBQWUsRUFBRTtBQUFsQixHQUE5QixDQUFiO0FBQ0EsU0FBT0gsVUFBUDtBQUNILENBSEQsQyxDQUtBOzs7QUFDQSxJQUFJSSxPQUFPLEdBQUcsVUFBVUMsT0FBVixFQUFtQixDQUVoQyxDQUZEOztBQUlBLElBQUlDLFVBQVUsR0FBRyxVQUFVQyxJQUFWLEVBQWdCO0FBQzdCYixFQUFBQSxhQUFhLENBQUNjLFFBQWQsQ0FBdUJELElBQXZCLEVBQTZCLENBQUNFLEdBQUQsRUFBTUMsS0FBTixLQUFnQjtBQUN6QyxRQUFJRCxHQUFKLEVBQVM7QUFDTFosTUFBQUEsR0FBRyxDQUFDLDhCQUFELEVBQWlDWSxHQUFqQyxDQUFIO0FBQ0gsS0FGRCxNQUVPO0FBQ0hFLE1BQUFBLElBQUksQ0FBQ0MsTUFBTCxDQUFZTCxJQUFaLEVBQWtCLENBQUNFLEdBQUQsRUFBTUksS0FBTixLQUFnQjtBQUM5QixZQUFJSixHQUFKLEVBQVM7QUFDTFosVUFBQUEsR0FBRyxDQUFDLHdCQUFELENBQUg7QUFDSCxTQUZELE1BRU87QUFDSEEsVUFBQUEsR0FBRyxDQUFDLG1CQUFELENBQUg7QUFDSDtBQUNKLE9BTkQ7QUFPSDtBQUNKLEdBWkQ7QUFhSCxDQWRELEMsQ0FnQkE7OztBQUNBLElBQUlpQixVQUFVLEdBQUcsVUFBVVQsT0FBVixFQUFtQixDQUVuQyxDQUZELEMsQ0FJQTs7O0FBQ0EsSUFBSVUsU0FBUyxHQUFHLFVBQVVDLFNBQVYsRUFBcUIsQ0FFcEMsQ0FGRCxDLENBSUE7OztBQUNBLElBQUlDLFdBQVcsR0FBRyxVQUFVQyxPQUFWLEVBQW1CLENBRXBDLENBRkQ7O0FBSUFDLE1BQU0sQ0FBQ0MsT0FBUCxDQUFlbEIsT0FBZixHQUF5QkEsT0FBekI7QUFDQWlCLE1BQU0sQ0FBQ0MsT0FBUCxDQUFlaEIsT0FBZixHQUF5QkEsT0FBekI7QUFDQWUsTUFBTSxDQUFDQyxPQUFQLENBQWVOLFVBQWYsR0FBNEJBLFVBQTVCO0FBQ0FLLE1BQU0sQ0FBQ0MsT0FBUCxDQUFlQyxPQUFmLEdBQXlCQSxPQUF6QiIsInNvdXJjZVJvb3QiOiJDOlxcd29ya3NwYWNlXFxmb29kLWFwaVxcZGF0YWJhc2UiLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCBtb25nb29zZSA9IHJlcXVpcmUoXCJtb25nb29zZVwiKTtcclxuaW1wb3J0IHsgRm9vZFNjaGVtYUpvaSwgVXNlclNjaGVtYUpvaSB9IGZyb20gJy4vc2hlbWFzLmpzJztcclxuaW1wb3J0IHsgVXNlck1vZGVsLCBGb29kTW9kZWwgfSBmcm9tICcuL3NoZW1hcy5qcyc7XHJcbmltcG9ydCB7IGxvZyB9IGZyb20gJy4uL2FsaWFzLmpzJztcclxuY29uc3Qgam9pID0gcmVxdWlyZSgnam9pJyk7XHJcblxyXG5jb25zdCBzZXJ2ZXJfcGF0aCA9IFwibW9uZ29kYitzcnY6Ly90aGVzYXRhbmlzdDpmdjAxN2twcEBjbHVzdGVyMC1xYnNtai5tb25nb2RiLm5ldC90ZXN0XCI7XHJcblxyXG52YXIgY29ubmVjdGlvbjtcclxuXHJcbnZhciBzdGFydCA9IGZ1bmN0aW9uICgpIHtcclxuICAgIGNvbm5lY3Rpb24gPSBtb25nb29zZS5jb25uZWN0KHNlcnZlcl9wYXRoLCB7dXNlTmV3VXJsUGFyc2VyOiB0cnVlfSk7XHJcbiAgICByZXR1cm4gY29ubmVjdGlvbjtcclxufTtcclxuXHJcbi8vZ2V0IFVzZXIgZnJvbSBkYXRhYmFzZSB3aXRoIHVzZXJfaWRcclxudmFyIGdldFVzZXIgPSBmdW5jdGlvbiAodXNlcl9pZCkge1xyXG5cclxufTtcclxuXHJcbnZhciBpbnNlcnRVc2VyID0gZnVuY3Rpb24gKHVzZXIpIHtcclxuICAgIFVzZXJTY2hlbWFKb2kudmFsaWRhdGUodXNlciwgKGVyciwgdmFsdWUpID0+IHtcclxuICAgICAgICBpZiAoZXJyKSB7XHJcbiAgICAgICAgICAgIGxvZyhcIldyb25nIFVzZXIgc2NoZW1hIHByb3ZpZGVkOiBcIiwgZXJyKTtcclxuICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICBVc2VyLmluc2VydCh1c2VyLCAoZXJyLCBzbWFsbCkgPT4ge1xyXG4gICAgICAgICAgICAgICAgaWYgKGVycikge1xyXG4gICAgICAgICAgICAgICAgICAgIGxvZyhcIlVuZXhwZWN0ZWQgbW9uZ28gZXJyb3JcIik7XHJcbiAgICAgICAgICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICAgICAgICAgIGxvZyhcIk5ldyBVc2VyIGFwcGVuZGVkXCIpO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9KTtcclxuICAgICAgICB9XHJcbiAgICB9KTtcclxufTtcclxuXHJcbi8vZ2V0IEhpc3RvcnkgZnJvbSBkYXRhYmFzZSB3aXRoIHVzZXJfaWRcclxudmFyIGdldEhpc3RvcnkgPSBmdW5jdGlvbiAodXNlcl9pZCkge1xyXG5cclxufTtcclxuXHJcbi8vZ2V0IEZvb2QgaWQgZnJvbSBmb29kX25hbWVcclxudmFyIGdldEZvb2RJZCA9IGZ1bmN0aW9uIChmb29kX25hbWUpIHtcclxuXHJcbn07XHJcblxyXG4vL2dldCBGb29kIG5hbWUgZnJvbSBmb29kX2lkXHJcbnZhciBnZXRGb29kTmFtZSA9IGZ1bmN0aW9uIChmb29kX2lkKSB7XHJcblxyXG59O1xyXG5cclxubW9kdWxlLmV4cG9ydHMuY29ubmVjdCA9IGNvbm5lY3Q7XHJcbm1vZHVsZS5leHBvcnRzLmdldFVzZXIgPSBnZXRVc2VyO1xyXG5tb2R1bGUuZXhwb3J0cy5nZXRIaXN0b3J5ID0gZ2V0SGlzdG9yeTtcclxubW9kdWxlLmV4cG9ydHMuZ2V0Rm9vZCA9IGdldEZvb2Q7XHJcbiJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "db.js"
      ],
      "names": [
        "mongoose",
        "require",
        "FoodSchemaJoi",
        "UserSchemaJoi",
        "UserModel",
        "FoodModel",
        "log",
        "joi",
        "server_path",
        "connection",
        "start",
        "connect",
        "useNewUrlParser",
        "getUser",
        "user_id",
        "insertUser",
        "user",
        "validate",
        "err",
        "value",
        "User",
        "insert",
        "small",
        "getHistory",
        "getFoodId",
        "food_name",
        "getFoodName",
        "food_id",
        "module",
        "exports",
        "getFood"
      ],
      "mappings": "AAAA,MAAMA,QAAQ,GAAGC,OAAO,CAAC,UAAD,CAAxB;;AACA,SAASC,aAAT,EAAwBC,aAAxB,QAA6C,aAA7C;AACA,SAASC,SAAT,EAAoBC,SAApB,QAAqC,aAArC;AACA,SAASC,GAAT,QAAoB,aAApB;;AACA,MAAMC,GAAG,GAAGN,OAAO,CAAC,KAAD,CAAnB;;AAEA,MAAMO,WAAW,GAAG,oEAApB;AAEA,IAAIC,UAAJ;;AAEA,IAAIC,KAAK,GAAG,YAAY;AACpBD,EAAAA,UAAU,GAAGT,QAAQ,CAACW,OAAT,CAAiBH,WAAjB,EAA8B;AAACI,IAAAA,eAAe,EAAE;AAAlB,GAA9B,CAAb;AACA,SAAOH,UAAP;AACH,CAHD,C,CAKA;;;AACA,IAAII,OAAO,GAAG,UAAUC,OAAV,EAAmB,CAEhC,CAFD;;AAIA,IAAIC,UAAU,GAAG,UAAUC,IAAV,EAAgB;AAC7Bb,EAAAA,aAAa,CAACc,QAAd,CAAuBD,IAAvB,EAA6B,CAACE,GAAD,EAAMC,KAAN,KAAgB;AACzC,QAAID,GAAJ,EAAS;AACLZ,MAAAA,GAAG,CAAC,8BAAD,EAAiCY,GAAjC,CAAH;AACH,KAFD,MAEO;AACHE,MAAAA,IAAI,CAACC,MAAL,CAAYL,IAAZ,EAAkB,CAACE,GAAD,EAAMI,KAAN,KAAgB;AAC9B,YAAIJ,GAAJ,EAAS;AACLZ,UAAAA,GAAG,CAAC,wBAAD,CAAH;AACH,SAFD,MAEO;AACHA,UAAAA,GAAG,CAAC,mBAAD,CAAH;AACH;AACJ,OAND;AAOH;AACJ,GAZD;AAaH,CAdD,C,CAgBA;;;AACA,IAAIiB,UAAU,GAAG,UAAUT,OAAV,EAAmB,CAEnC,CAFD,C,CAIA;;;AACA,IAAIU,SAAS,GAAG,UAAUC,SAAV,EAAqB,CAEpC,CAFD,C,CAIA;;;AACA,IAAIC,WAAW,GAAG,UAAUC,OAAV,EAAmB,CAEpC,CAFD;;AAIAC,MAAM,CAACC,OAAP,CAAelB,OAAf,GAAyBA,OAAzB;AACAiB,MAAM,CAACC,OAAP,CAAehB,OAAf,GAAyBA,OAAzB;AACAe,MAAM,CAACC,OAAP,CAAeN,UAAf,GAA4BA,UAA5B;AACAK,MAAM,CAACC,OAAP,CAAeC,OAAf,GAAyBA,OAAzB",
      "sourceRoot": "C:\\workspace\\food-api\\database",
      "sourcesContent": [
        "const mongoose = require(\"mongoose\");\r\nimport { FoodSchemaJoi, UserSchemaJoi } from './shemas.js';\r\nimport { UserModel, FoodModel } from './shemas.js';\r\nimport { log } from '../alias.js';\r\nconst joi = require('joi');\r\n\r\nconst server_path = \"mongodb+srv://thesatanist:fv017kpp@cluster0-qbsmj.mongodb.net/test\";\r\n\r\nvar connection;\r\n\r\nvar start = function () {\r\n    connection = mongoose.connect(server_path, {useNewUrlParser: true});\r\n    return connection;\r\n};\r\n\r\n//get User from database with user_id\r\nvar getUser = function (user_id) {\r\n\r\n};\r\n\r\nvar insertUser = function (user) {\r\n    UserSchemaJoi.validate(user, (err, value) => {\r\n        if (err) {\r\n            log(\"Wrong User schema provided: \", err);\r\n        } else {\r\n            User.insert(user, (err, small) => {\r\n                if (err) {\r\n                    log(\"Unexpected mongo error\");\r\n                } else {\r\n                    log(\"New User appended\");\r\n                }\r\n            });\r\n        }\r\n    });\r\n};\r\n\r\n//get History from database with user_id\r\nvar getHistory = function (user_id) {\r\n\r\n};\r\n\r\n//get Food id from food_name\r\nvar getFoodId = function (food_name) {\r\n\r\n};\r\n\r\n//get Food name from food_id\r\nvar getFoodName = function (food_id) {\r\n\r\n};\r\n\r\nmodule.exports.connect = connect;\r\nmodule.exports.getUser = getUser;\r\nmodule.exports.getHistory = getHistory;\r\nmodule.exports.getFood = getFood;\r\n"
      ]
    },
    "sourceType": "module",
    "mtime": 1564583957610
  }
}